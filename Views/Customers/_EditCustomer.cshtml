@model URLEntryMVC.ViewModel.CustomerVM.CustomerVM
@{
    var base64Image = Convert.ToBase64String(Model.CustomerPic);
    var source = String.Format("data:image/png;base64,{0}", base64Image);
}
<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-md-12">
            <form id="editCustomerForm">
                @Html.HiddenFor(x=>x.Id)
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="mb-3 col-md-4">
                                <label class="form-label" for="CustomerName">Customer Name</label><span style="color:red"> *</span>
                                <input type="text" asp-for="CustomerName" class="form-control" id="CustomerName" placeholder="ACME Inc." required>
                                <span asp-validation-for="CustomerName" class="text-danger" id="CustomerError"></span>
                            </div>
                            <div class="mb-3 col-md-4">
                                <label class="form-label" for="ContactNumber">Phone No</label>
                                <input type="text" asp-for="ContactNumber" id="ContactNumber" class="form-control phone-mask" placeholder="658 799 8941">
                                <span asp-validation-for="ContactNumber" class="text-danger"></span>
                            </div>
                            <div class="mb-3 col-md-4">
                                <label class="form-label" for="CustomerEmail">Email</label>
                                <input type="email" asp-for="CustomerEmail" id="CustomerEmail" class="form-control" placeholder="support@tapthat.com">
                                <span asp-validation-for="CustomerEmail" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="Address">Address</label><span style="color:red"> *</span>
                            <textarea id="Address" asp-for="Address" class="form-control" placeholder="2425 Wilkinson Court" required></textarea>
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="File_Upload">Upload Logo</label>
                            <input type="file" class="form-control" id="File_Upload" name="CustomerLogo" accept="image/png" />
                            <span asp-validation-for="CustomerLogo" class="text-danger"></span>
                        </div>
                        <div class="mb-3 card">
                            <img src="@source" alt="Customer Logo Here" height="50" width="100" />
                        </div>
                    </div>
                </div>
                @*Business Review Points Starts here*@
                <div class="card mb-4">
                    <h5 class="card-header">Business Review Points</h5>
                    <div class="card-body">
                        <table class="table table-bordered" id="reviewPtTbl">
                            <thead>
                                <tr class="fw-bolder text-muted bb-none" style="background-color: var(--bg-200)">
                                    <th>TITLE</th>
                                    <th>POINT URL</th>
                                    @*<th>TIME DELAY(In Minutes)</th>*@
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.businessReviewUrls.Count(); i++)
                                {
                                    <tr>
                                        
                                        @Html.EditorFor(m=>m.businessReviewUrls[i].BusinessPointId,new { htmlAttributes = new { @class = "form-control", @id = "BrPointId_" + i,@style="display:none" } })
                                        <td>
                                            @Model.businessReviewUrls[i].UrlName
                                        </td>
                                        <td>
                                            @Html.EditorFor(m=>m.businessReviewUrls[i].PointUrl,new { htmlAttributes = new { @class = "form-control", @id = "url_" + i } })
                                            <span asp-validation-for="@Model.businessReviewUrls[i].PointUrl" class="text-danger" id="errorUrl_@i"></span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
    var uploadField = document.getElementById("File_Upload");
    uploadField.onchange = function() {
        if (this.files[0].size > 500000) {
            alert("File should not be greater then 500kb");
            this.value = "";
        };
    };
    $("#saveBtn").click(function() {
        if ($("#editCustomerForm").valid()) {
            var fileData = new FormData();
            // Adding one more key to FormData object
            fileData.append("CustomerLogo", $("#File_Upload")[0].files[0]);
            fileData.append('CustomerName', $("#CustomerName").val());
            fileData.append('Address', $("#Address").val());
            fileData.append('ContactNumber', $("#ContactNumber").val());
            fileData.append('CustomerEmail', $("#CustomerEmail").val());
            fileData.append('Id', @Model.Id);
            //binding the review points data
            var rowCount = @Model.businessReviewUrls.Count(); // Get the number of rows
            var urlsSet = new Set(); // Use Set to store unique pointUrl values
            for (var i = 0; i < rowCount; i++) {
                var pointId = $("#BrPointId_" + i).val();
                var pointUrl = $("#url_" + i).val().trim();
                if (urlsSet.has(pointUrl)) {
                    $("#errorUrl_" + i).text("Duplicate Point URL. Please enter a unique URL.");
                    return false; // Prevent form submission
                } else {
                    urlsSet.add(pointUrl);
                };

                fileData.append('businessReviewUrls[' + i + '].BusinessPointId', pointId);
                fileData.append('businessReviewUrls[' + i + '].PointUrl', pointUrl);
                
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("EditCustomer", "Customers")',
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                beforeSend: function() {
                    $("#logoLoader").fadeIn();
                },
                success: function(data) {
                    $("#logoLoader").fadeOut();
                    if (data == 0) {
                        $('#CustomerError').text('Customer already exist');
                    }
                    else if (data == 1) {
                        location.reload(true);
                    }
                }
            })
        }
    });
</script>
