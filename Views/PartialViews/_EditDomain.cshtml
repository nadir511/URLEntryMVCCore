@using URLEntryMVC.ApplicationConstants;
@model URLEntryMVC.ViewModel.UrlVM.SaveUrlVM
<form id="editDomainForm">
    <div class="row">
        @Html.HiddenFor(m=>m.Id)
        @Html.HiddenFor(m=>m.PointCategoryId)
        @Html.HiddenFor(m=>m.CustomerId)
        @if (Model.PointIds != null)
        {
            for (int i = 0; i < Model.PointIds.Count; i++)
            {
                @Html.HiddenFor(model => Model.PointIds[i])
            }
        }
        <div class="row" style="display:none" id="customerDiv">
            <div class="col-sm-12">
                <label style="display:block">Select Customer</label>
                <select id="customersList" class="form-control" asp-for="CustomerId" asp-items="@(new SelectList(Model.CustomerList, "CustomerId", "CustomerName"))">
                    <option value="">--Select Customer--</option>
                </select>
            </div>
        </div>
        <div class="row" id="savePointsDiv">
            <div class="col-sm-12">
                <label style="display:block">Select From Save Points</label>
                <select id="savePointsList" class="form-control" onchange="ChangeLibPoint(this)">
                    <option value="">--Select Point--</option>
                </select>
            </div>
        </div>

        <div class="row" style="display:none" id="stdPointProp">
            <div class="col-sm-12">
                <label>Domain Link</label><span style="color:red"> *</span>
                @Html.EditorFor(m => m.DomainLink, new { htmlAttributes = new { @class = "form-control",@type="url",@id="pointDomin" } })
                @Html.ValidationMessageFor(m => m.DomainLink, "", new { @class = "text-danger", id="domainError" })
            </div>
        </div>
        <div class="row" style="display:none" id="emailPointProp">
            <div class="col-sm-12">
                <label>Email's</label><span style="color:red"> *</span>
                @Html.EditorFor(m => m.Email1, new { htmlAttributes = new { @class = "form-control mb-1",@id="pointEmai1",@placeholder="Enter 1st Email",@type="email" } })
                @Html.ValidationMessageFor(m => m.Email1, "", new { @class = "text-danger", id="email1Error" })
                @Html.EditorFor(m => m.Email2, new { htmlAttributes = new { @class = "form-control mb-1",@id="pointEmai2",@placeholder="Enter 2nd Email",@autocomplete="off",@type="email" } })
                @Html.ValidationMessageFor(m => m.Email2, "", new { @class = "text-danger", id="email2Error" })
                @Html.EditorFor(m => m.Email3, new { htmlAttributes = new { @class = "form-control",@id="pointEmai3",@placeholder="Enter 3rd Email",@autocomplete="off",@type="email" } })
                @Html.ValidationMessageFor(m => m.Email3, "", new { @class = "text-danger", id="email3Error" })
            </div>
            <div class="col-sm-6">
                <label>Subject</label><span style="color:red"> *</span>
                @Html.EditorFor(m => m.Subject, new { htmlAttributes = new { @class = "form-control",@placeholder="Enter Subject",@id="SubjectId" } })
                @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "text-danger", id="subjectError" })
            </div>
            <div class="col-sm-12">
                <label>Text</label><span style="color:red"> *</span>
                @Html.TextAreaFor(m => m.Text, new { @class = "form-control",@placeholder="Enter Text",@id="TextId" })
                @Html.ValidationMessageFor(m => m.Text, "", new { @class = "text-danger", id="textError" })
            </div>

        </div>
        <div id="businessRevPointProp" style="margin-top:25px">
        </div>
        <div class="col-sm-12">
            <label class="form-label" for="CustomerNotes">Customer Notes</label>
            <textarea id="customerNotes" asp-for="CustomerNotes" class="form-control" placeholder="Add Notes"></textarea>
            <span asp-validation-for="CustomerNotes" class="text-danger"></span>
        </div>
    </div>
</form>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
    $(document).ready(function () {
        debugger;
        $('#customersList').select2({
            dropdownAutoWidth: true,
            dropdownParent: $('#EditAppModal .modal-content')
        });
        $('#savePointsList').select2({
            dropdownAutoWidth: true,
            dropdownParent: $('#EditAppModal .modal-content')
        });
        if ('@User.IsInRole(AppConstant.CustomerRole)' == 'True') {
            $('#customersList').prop("disabled", true);
        }
        ChangePointCat();
        if (selectedpointCat != @AppConstant.BusinessReviewPointId) {
            GetSavePoints(@Model.PointCategoryId, $('#customersList').val());
        }
    });
    function ChangePointCat() {
        var selectedpointCat = @Model.PointCategoryId;
        console.log(selectedpointCat);
        if (selectedpointCat == 1) {
            $("#stdPointProp").show();
            $("#emailPointProp").hide();
            $("#pointDomin").prop('required', true);

            $("#SubjectId").val('');
            $("#SubjectId").prop('required', false);
            $("#TextId").val('');
            $("#TextId").prop('required', false);
            $("#pointEmai1").val('');
            $("#pointEmai2").val('');
            $("#pointEmai3").val('');
            $("#pointEmai1").prop('required', false);
        }
        else if (selectedpointCat == 2) {
            $("#stdPointProp").hide();
            $("#emailPointProp").show();
            $("#pointDomin").val('');
            $("#pointDomin").prop('required', false);

            $("#SubjectId").prop('required', true);
            $("#TextId").prop('required', true);
            $("#pointEmai1").prop('required', true);
        }
        else if (selectedpointCat == @AppConstant.BusinessReviewPointId) {
            $.ajax({
                url: "@Url.Action("ListOfBrPointsByPointId", "URL")",
                type: 'GET',
                contentType: 'application/json',
                data: { 'pointId': '@Model.Id' },
                beforeSend: function () {
                    $("#logoLoader").fadeIn();
                },
                success: function (data) {
                    $('#businessRevPointProp').html(data);
                },
                complete: function () {
                    $("#logoLoader").fadeOut();
                },
                error: function (errorMsg) {
                    console.log(errorMsg);
                    $("#logoLoader").fadeOut();
                }
            });

            //need to disabled

            $("#emailPointProp").hide();
            $("#SubjectId").val('');
            $("#SubjectId").prop('required', false);
            $("#TextId").val('');
            $("#TextId").prop('required', false);
            $("#pointEmai1").val('');
            $("#pointEmai2").val('');
            $("#pointEmai3").val('');
            $("#pointEmai1").prop('required', false);
            $('#savePointListDiv').hide();
            $('#savePointsDiv').hide();
            $('#is_pointSave').prop('checked', false);
            $("#stdPointProp").hide();
            $("#pointDomin").prop('required', false);
            $('#socialMediaDiv').hide();
        }
        else {
            $("#stdPointProp").hide();
            $("#emailPointProp").hide();
        }
    };
    $('#customersList').change(function () {
        GetSavePoints(@Model.PointCategoryId, $('#customersList').val());
    });
    function GetSavePoints(selectedpointCat, customerId) {
        $.ajax({
            url: "@Url.Action("ListOfSavePoints", "URL")",
            type: 'GET',
            contentType: 'application/json',
            data: { 'pointCategory': selectedpointCat, 'customerId': customerId },
            beforeSend: function () {
                $("#logoLoader").fadeIn();
            },
            success: function (savePoints) {
                if (savePoints != "error") {
                    $("#savePointsList").empty();
                    var v = "<option value=>--Select Point--</option>";
                    $.each(savePoints, function (i, Points) {
                        v += '<option value="' + Points.value + '">' + Points.text + '</option>';
                    });
                    $("#savePointsList").html(v);
                    $('#savePointsDiv').show();
                }
            },
            complete: function () {
                $("#logoLoader").fadeOut();
            },
            error: function (errorMsg) {
                console.log(errorMsg);
                $("#logoLoader").fadeOut();
            }
        });
    }
    function ChangeLibPoint(obj) {
        var selectedSavePoint = $("#savePointsList").val();
        if (selectedSavePoint != "") {
            $.ajax({
                url: "@Url.Action("InfoOfSavePoints", "URL")",
                type: 'GET',
                contentType: 'application/json',
                data: { 'savePointId': selectedSavePoint },
                beforeSend: function () {
                    $("#logoLoader").fadeIn();
                },
                success: function (data) {
                    $("#logoLoader").fadeOut();
                    console.table(data);
                    if (data.pointCategoryId == 1) {
                        $('#pointDomin').val(data.domainLink);
                    }
                    else if (data.pointCategoryId == 2) {
                        $('#pointEmai1').val(data.email1);
                        $('#pointEmai2').val(data.email2);
                        $('#pointEmai3').val(data.email3);

                        $('#SubjectId').val(data.subject);

                        $('#TextId').val(data.text);
                    }
                }
            });
        }
        else {
            $('#pointDomin').prop('readonly', false);
            $('#pointDomin').val('');

            $('#pointEmai1').prop('readonly', false);
            $('#pointEmai1').val('');
            $('#pointEmai2').prop('readonly', false);
            $('#pointEmai2').val('');
            $('#pointEmai3').prop('readonly', false);
            $('#pointEmai3').val('');

            $('#SubjectId').prop('readonly', false);
            $('#SubjectId').val('');

            $('#TextId').prop('readonly', false);
            $('#TextId').val('');
        }
    }

    $("#updateBtn").click(function () {
        var actionMethod = '';
        if ('@Model.EditType' == '@AppConstant.MultiEdit') {
            actionMethod = 'UpdateMultiPointInfo';
        }
        else {
            actionMethod = 'UpdatePointInfo';
        }
        if ($("#editDomainForm").valid()) {
            $.ajax({
                type: "POST",
                url: "/URL/" + actionMethod,
                dataType: 'json',
                data: $("#editDomainForm").serializeArray(),
                beforeSend: function () {
                    $("#logoLoader").fadeIn();
                },
                success: function (data) {
                    $("#logoLoader").fadeOut();
                    if (data == 1) {
                        location.reload(true);
                    }
                }
            })
        }
    });
</script>