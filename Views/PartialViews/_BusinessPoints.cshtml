@model URLEntryMVC.ViewModel.UrlVM.SaveUrlVM
<div class="card mb-4">
    <h5 class="card-header">Business Review Points</h5>
    <div class="card-body">
        <table class="table table-bordered" id="reviewPtTbl">
            <thead>
                <tr class="fw-bolder text-muted bb-none" style="background-color: var(--bg-200)">
                    @*<th>TITLE</th>*@
                    <th>POINT URL</th>
                    <th>TIME DELAY(In Minutes)</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.businessReviewPoints != null)
                {
                    @for (int i = 0; i < Model.businessReviewPoints.Count(); i++)
                    {
                        <tr>

                            @*@Html.EditorFor(m=>m.businessReviewPoints[i].BusinessPointId,new { htmlAttributes = new { @class = "form-control", @id = "BrPointId_" + i,@style="display:none" } })*@
                            @*<td>
                    @Model.businessReviewPoints[i].UrlName
                    </td>*@
                            <td>
                                @Html.EditorFor(m=>m.businessReviewPoints[i].PointUrl,new { htmlAttributes = new { @class = "form-control",@id="url_"+i  } })
                                <span asp-validation-for="@Model.businessReviewPoints[i].PointUrl" class="text-danger" id="errorUrl_@i"></span>

                            </td>
                            <td>
                                @Html.EditorFor(m=>m.businessReviewPoints[i].DelayTimeInMinuts,new { htmlAttributes = new { @class = "form-control",@min="1", @id = "timeDelay_" + i } })
                                <span asp-validation-for="@Model.businessReviewPoints[i].DelayTimeInMinuts" class="text-danger" id="errortimeDelay_@i"></span>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    function ValidateBusinessRpoint() {
        if ($("#pointCatList").val() == 4) {
            var rowCount = 0;
            if ('@Model.businessReviewPoints' != null) {
                rowCount = parseInt('@Model.businessReviewPoints.Count()');
            };
            var urlsSet = new Set(); // Use Set to store unique pointUrl values
            for (var i = 0; i < rowCount; i++) {
                var pointUrl = $("#url_" + i).val(); // Trim leading and trailing spaces
                var delayTime = $("#timeDelay_" + i).val();

                // Check if pointUrl is not empty, then delayTime should also not be empty
                // and vice versa
                if (pointUrl === "" && delayTime !== "") {
                    $("#errorUrl_" + i).text("Please enter a valid Point URL.");
                    $("#errortimeDelay_" + i).text(""); // Clear the error message for timeDelay
                    return false; // Prevent form submission
                } else if (pointUrl !== "" && delayTime === "") {
                    $("#errorUrl_" + i).text(""); // Clear the error message for Point URL
                    $("#errortimeDelay_" + i).text("Please enter a valid Delay Time.");
                    return false; // Prevent form submission
                } else if (pointUrl !== "" && delayTime !== "") {
                    // Clear the error messages if both fields are valid
                    $("#errorUrl_" + i).text("");
                    $("#errortimeDelay_" + i).text("");

                    // Check for duplicate pointUrl values
                    if (urlsSet.has(pointUrl)) {
                        $("#errorUrl_" + i).text("Duplicate Point URL. Please enter a unique URL.");
                        return false; // Prevent form submission
                    } else {
                        urlsSet.add(pointUrl);
                    }
                }
            }
            return true;
        }
    }

</script>