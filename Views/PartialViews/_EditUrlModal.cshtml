@using URLEntryMVC.ApplicationConstants;
@model URLEntryMVC.ViewModel.UrlVM.SaveUrlVM
<form id="updateUrlForm">
    @Html.HiddenFor(m=>m.Id)
    <div class="row">
        <div class="col-sm-12">
            <label style="display:block">Select Customer<span style="color:red"> *</span></label>
            <select id="customersList" class="form-control" asp-for="CustomerId" asp-items="@(new SelectList(Model.CustomerList, "CustomerId", "CustomerName"))" required>
                <option value="">--Select Customer--</option>
            </select>
            <input type="hidden" asp-for="CustomerId" />
            @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger", id="selectCustomerError" })
        </div>

    </div>
    <div class="row">
        <div class="col-sm-10">
            <label>Customer Point</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.CustomerPointName, new { htmlAttributes = new { @class = "form-control",@required="required"} })
            @Html.ValidationMessageFor(model => model.CustomerPointName, "", new { @class = "text-danger",id="customerPointError" })
        </div>
        <div class="col-sm-2" id="savePointDiv">
            <label class="custom-control-label" for="is_pointSave">Save P.</label>
            <div class="form-check form-switch">
                @Html.CheckBoxFor(m => m.SaveInLibrary, new { @class = "form-check-input", id = "is_pointSave" })
                @Html.ValidationMessageFor(m => m.SaveInLibrary, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @if (Model.SaveInLibrary == true)
    {
        <div class="row" id="managmentNameDiv">
            <div class="col-sm-12">
                <label>Save Point Name</label>
                @Html.EditorFor(m => m.ManagementName, new { htmlAttributes = new { @class = "form-control",@type="text",@id="managmentName" } })
                @Html.ValidationMessageFor(m => m.ManagementName, "", new { @class = "text-danger", id="managmentNameError" })
            </div>
        </div>
    }
    else
    {
        <div class="row" style="display:none" id="managmentNameDiv">
            <div class="col-sm-12">
                <label>Save Point Name</label>
                @Html.EditorFor(m => m.ManagementName, new { htmlAttributes = new { @class = "form-control",@type="text",@id="managmentName" } })
                @Html.ValidationMessageFor(m => m.ManagementName, "", new { @class = "text-danger", id="managmentNameError" })
            </div>
        </div>
    }
    <div class="row">
        <div class="col-sm-12">
            <label>Select Point Category</label><span style="color:red"> *</span>
            <select id="pointCatList" class="form-control" asp-for="PointCategoryId" asp-items="@(new SelectList(Model.PointCategoryList, "CategoryId", "CategoryName"))" onchange="ChangePointCat(this)">
                <option value="">--Select Point Category--</option>
            </select>
            @*<input type="hidden" asp-for="PointCategoryId" />*@
            @Html.ValidationMessageFor(m => m.PointCategoryId, "", new { @class = "text-danger", id="selectPointCatError" })
        </div>
    </div>

    <div class="row" style="display:none" id="savePointsListDiv">
        <div class="col-sm-12">
            <label style="display:block">Select From Save Points</label>
            <select id="savePointsList" class="form-control" onchange="ChangeLibPoint(this)">
                <option value="">--Select Point--</option>
            </select>
        </div>
    </div>
    <div class="row" style="display:none" id="socialMediaDiv">
        <div class="col-sm-12">
            <label style="display:block">Select From Social Media Profiles</label>
            <select id="socialPointsList" class="form-control" onchange="ChangeSocialMediaPoint(this)">
                <option value="">--Select Profile--</option>
            </select>
        </div>
    </div>
    <div class="row" style="display:none" id="stdPointProp">
        <div class="col-sm-12">
            <label>Domain Link</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.DomainLink, new { htmlAttributes = new { @class = "form-control",@type="url",@id="pointDomin" } })
            @Html.ValidationMessageFor(m => m.DomainLink, "", new { @class = "text-danger", id="domainError" })
        </div>
    </div>
    <div class="row" style="display:none" id="emailPointProp">
        <div class="col-sm-12">
            <label>Recipient Email Address (Max 3)</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.Email1, new { htmlAttributes = new { @class = "form-control mb-1",@id="pointEmai1",@placeholder="Enter 1st Email",@type="email" } })
            @Html.ValidationMessageFor(m => m.Email1, "", new { @class = "text-danger", id="email1Error" })
            @Html.EditorFor(m => m.Email2, new { htmlAttributes = new { @class = "form-control mb-1",@id="pointEmai2",@placeholder="Enter 2nd Email",@autocomplete="off",@type="email" } })
            @Html.ValidationMessageFor(m => m.Email2, "", new { @class = "text-danger", id="email2Error" })
            @Html.EditorFor(m => m.Email3, new { htmlAttributes = new { @class = "form-control",@id="pointEmai3",@placeholder="Enter 3rd Email",@autocomplete="off",@type="email" } })
            @Html.ValidationMessageFor(m => m.Email3, "", new { @class = "text-danger", id="email3Error" })
        </div>
        <div class="col-sm-6">
            <label>Subject</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.Subject, new { htmlAttributes = new { @class = "form-control",@placeholder="Enter Subject",@id="SubjectId" } })
            @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "text-danger", id="subjectError" })
        </div>
        <div class="col-sm-12">
            <label>Text</label><span style="color:red"> *</span>
            @Html.TextAreaFor(m => m.Text, new { @class = "form-control",@placeholder="Enter Text",@id="TextId" })
            @Html.ValidationMessageFor(m => m.Text, "", new { @class = "text-danger", id="textError" })
        </div>

    </div>
    <div id="businessRevPointProp" style="margin-top:25px">
    </div>

</form>
@*Sure Message Modal*@
<div class="modal fade" id="ConfirmUpdateAppModal" tabindex="-1" aria-labelledby="UpdateExampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" id="UpdateModalBody">
                Are you sure you want to Update the Point?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="updateConfirmBtn">Confirm</button>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
    $(document).ready(function () {
        $('#EditexampleModalLabel').text("Edit " + '@Model.CustomerPointName');
        ChangePointCat();
    });
    $('#is_pointSave').change(function () {
        $('#managmentNameError').text('');
        if ($(this).is(':checked')) {
            $('#managmentNameDiv').show();
        } else {
            $('#managmentName').val('');
            $('#managmentNameDiv').hide();
        }
    });
    $('#customersList').change(function () {
        $('#selectCustomerError').text('');
        $('#socialPointsList').empty();
        var v = "<option value=>--Select Profile--</option>";
        $("#socialPointsList").html(v);
    });
    function ChangePointCat(obj) {

        var selectedpointCat = $("#pointCatList").val();
        var customerId = $("#customersList").val();
        if (customerId == "" || customerId == null) {
            $('#selectCustomerError').text('Select Customer');
            return;
        }
        else {
            $('#selectCustomerError').text('');
        }
        if (selectedpointCat != "" && selectedpointCat != @AppConstant.TapThatContractPointId && selectedpointCat != @AppConstant.BusinessReviewPointId) {
            var v = "<option value=>--Select Point--</option>";
            $("#savePointsList").html(v);
            $.ajax({
                url: "@Url.Action("ListOfSavePoints", "URL")",
                type: 'GET',
                contentType: 'application/json',
                data: { 'pointCategory': selectedpointCat, 'customerId': customerId },
                beforeSend: function () {
                    $("#logoLoader").fadeIn();
                },
                success: function (savePoints) {
                    if (savePoints != "error") {
                        $.each(savePoints, function (i, Points) {
                            v += '<option value="' + Points.value + '">' + Points.text + '</option>';
                        });
                        $("#savePointsList").html(v);
                        $('#savePointsListDiv').show();
                    }
                },
                complete: function () {
                    $("#logoLoader").fadeOut();
                },
                error: function (errorMsg) {
                    console.log(errorMsg);
                    $("#logoLoader").fadeOut();
                }
            });
        }
        if (selectedpointCat == @AppConstant.StdContractPointId) {
            //need to enabled
            $("#stdPointProp").show();
            $("#emailPointProp").hide();
            $("#pointDomin").prop('required', true);
            $('#socialMediaDiv').hide();

            //need to disabled
            $("#SubjectId").val('');
            $("#SubjectId").prop('required', false);
            $("#TextId").val('');
            $("#TextId").prop('required', false);
            $("#pointEmai1").val('');
            $("#pointEmai2").val('');
            $("#pointEmai3").val('');
            $("#pointEmai1").prop('required', false);
        }
        else if (selectedpointCat == @AppConstant.EmailContractPointId) {
            //need to enabled
            $("#stdPointProp").hide();
            $("#emailPointProp").show();
            $("#pointDomin").val('');
            $("#pointDomin").prop('required', false);
            $('#socialMediaDiv').hide();

            //need to disabled
            $("#SubjectId").prop('required', true);
            $("#TextId").prop('required', true);
            $("#pointEmai1").prop('required', true);
        }
        else if (selectedpointCat != "" && selectedpointCat == @AppConstant.TapThatContractPointId) {
            if (customerId == "" || customerId == null) {
                $('#selectCustomerError').text('Select Customer');
            }
            else {
                $('#selectCustomerError').text('');
                var v = "<option value=>--Select Profile--</option>";
                $("#socialPointsList").html(v);
                $.ajax({
                    url: "@Url.Action("ListOfSLinksByCustomer", "URL")",
                    type: 'GET',
                    contentType: 'application/json',
                    data: { 'customerId': customerId },
                    beforeSend: function () {
                        $("#logoLoader").fadeIn();
                    },
                    success: function (profiles) {
                        if (profiles != "error") {
                            $.each(profiles, function (i, profile) {
                                v += '<option value="' + profile.text + '">' + profile.value + '</option>';
                            });
                            $("#socialPointsList").html(v);
                            $('#socialMediaDiv').show();
                        }
                    },
                    complete: function () {
                        $("#logoLoader").fadeOut();
                    },
                    error: function (errorMsg) {
                        console.log(errorMsg);
                        $("#logoLoader").fadeOut();
                    }
                });
            }
            //need to enabled
            $('#savePointDiv').hide();
            $('#is_pointSave').prop('checked', false);
            $("#stdPointProp").show();
            $("#pointDomin").prop('required', true);
            $('#socialMediaDiv').show();

            //need to disabled
            $("#emailPointProp").hide();
            $("#SubjectId").val('');
            $("#SubjectId").prop('required', false);
            $("#TextId").val('');
            $("#TextId").prop('required', false);
            $("#pointEmai1").val('');
            $("#pointEmai2").val('');
            $("#pointEmai3").val('');
            $("#pointEmai1").prop('required', false);
        }
        else if (selectedpointCat != "" && selectedpointCat == @AppConstant.BusinessReviewPointId) {
            // To make the dropdown read-only
            $('#pointCatList').on('mousedown', function (event) {
                event.preventDefault();
                this.blur();
                window.focus();
            });

            if (customerId == "" || customerId == null) {
                $('#selectCustomerError').text('Select Customer');
            }
            else {
                $('#selectCustomerError').text('');
                $.ajax({
                    url: "@Url.Action("ListOfBrPointsByPointId", "URL")",
                    type: 'GET',
                    contentType: 'application/json',
                    data: { 'pointId': @Model.Id },
                    beforeSend: function () {
                        $("#logoLoader").fadeIn();
                    },
                    success: function (data) {
                        $('#businessRevPointProp').html(data);
                    },
                    complete: function () {
                        $("#logoLoader").fadeOut();
                    },
                    error: function (errorMsg) {
                        console.log(errorMsg);
                        $("#logoLoader").fadeOut();
                    }
                });
            }

            //need to disabled
            $("#emailPointProp").hide();
            $("#SubjectId").val('');
            $("#SubjectId").prop('required', false);
            $("#TextId").val('');
            $("#TextId").prop('required', false);
            $("#pointEmai1").val('');
            $("#pointEmai2").val('');
            $("#pointEmai3").val('');
            $("#pointEmai1").prop('required', false);
            $('#savePointDiv').hide();
            $('#savePointsListDiv').hide();
            $('#is_pointSave').prop('checked', false);
            $("#stdPointProp").hide();
            $("#pointDomin").prop('required', false);
            $('#socialMediaDiv').hide();
        }
        else {
            $("#stdPointProp").hide();
            $("#emailPointProp").hide();
        }
    };

    function ChangeSocialMediaPoint(obj) {
        var selectedSocialPoint = $("#socialPointsList").val();
        if (selectedSocialPoint != "") {
            $('#pointDomin').val(selectedSocialPoint);
        }
        else {
            $('#pointDomin').val('');
        }
    }
    function ChangeLibPoint(obj) {
        var selectedSavePoint = $("#savePointsList").val();
        if (selectedSavePoint != "") {
            $.ajax({
                url: "@Url.Action("InfoOfSavePoints", "URL")",
                type: 'GET',
                contentType: 'application/json',
                data: { 'savePointId': selectedSavePoint },
                beforeSend: function () {
                    $("#logoLoader").fadeIn();
                },
                success: function (data) {
                    $("#logoLoader").fadeOut();
                    console.table(data);
                    if (data.pointCategoryId == 1) {
                        $('#pointDomin').val(data.domainLink);
                    }
                    else if (data.pointCategoryId == 2) {
                        $('#pointEmai1').val(data.email1);
                        $('#pointEmai2').val(data.email2);
                        $('#pointEmai3').val(data.email3);

                        $('#SubjectId').val(data.subject);

                        $('#TextId').val(data.text);
                    }
                }
            });
        }
        else {
            $('#pointDomin').prop('readonly', false);
            $('#pointDomin').val('');

            $('#pointEmai1').prop('readonly', false);
            $('#pointEmai1').val('');
            $('#pointEmai2').prop('readonly', false);
            $('#pointEmai2').val('');
            $('#pointEmai3').prop('readonly', false);
            $('#pointEmai3').val('');

            $('#SubjectId').prop('readonly', false);
            $('#SubjectId').val('');

            $('#TextId').prop('readonly', false);
            $('#TextId').val('');
        }
    }
    $("#updateBtn").click(function () {
        if ($("#updateUrlForm").valid()) {
            $('#ConfirmUpdateAppModal').modal({
                backdrop: 'static', // Prevent to close on click outside the modal
                keyboard: false, // Prevent to close by ESC
                show: true
            });
            $('#ConfirmUpdateAppModal').modal('show');
        }
    });
    $("#updateConfirmBtn").click(function () {
        //custom validations
        $('#managmentNameError').text('');
        if ($('#is_pointSave').is(':checked') && $('#managmentName').val() == '') {
            $('#managmentNameError').text('Enter Save Point Name');
            return;
        }
        if ($("#pointCatList").val() == 4 && ValidateBusinessRpoint() && $("#updateUrlForm").valid()) {
            SubmitForm();
        }
        else if ($("#pointCatList").val() != 4 && $("#updateUrlForm").valid()) {
            SubmitForm();
        }
    });
    function SubmitForm() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateLink", "URL")',
            dataType: 'json',
            data: $("#updateUrlForm").serializeArray(),
            beforeSend: function () {
                $("#logoLoader").fadeIn();
            },
            success: function (data) {
                $("#logoLoader").fadeOut();
                if (data == 0) {
                    $('#urlError').text('URL already exist');
                }
                else if (data == -1) {
                    $('#customerPointError').text('Customer point already exist');
                }
                else if (data == -2) {
                    $('#managmentNameError').text('This Management name already exist for selected customer.');
                }
                else if (data == 1) {
                    location.reload(true);
                }
            }
        })

    }
</script>