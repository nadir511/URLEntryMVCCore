@model URLEntryMVC.ViewModel.UrlVM.SaveUrlVM
<form id="addUrlForm">
    <div class="row">
        <div class="col-sm-6">
            <label>Select Customer</label><span style="color:red"> *</span>
            <select id="customersList" class="form-control" asp-for="CustomerId" asp-items="@(new SelectList(Model.CustomerList, "CustomerId", "CustomerName"))" required>
                <option value="">--Select Customer--</option>
            </select>
            <input type="hidden" asp-for="CustomerId" />
            @Html.ValidationMessageFor(m => m.CustomerId, "", new { @class = "text-danger", id="selectCustomerError" })
        </div>
        <div class="col-sm-6">
            <label>Customer Point</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.CustomerPointName, new { htmlAttributes = new { @class = "form-control",@required="required"} })
            @Html.ValidationMessageFor(model => model.CustomerPointName, "", new { @class = "text-danger",id="customerPointError" })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <label>Select Point Category</label><span style="color:red"> *</span>
            <select id="pointCatList" class="form-control" asp-for="PointCategoryId" asp-items="@(new SelectList(Model.PointCategoryList, "CategoryId", "CategoryName"))" onchange="ChangePointCat(this)" required>
                <option value="">--Select Point Category--</option>
            </select>
            <input type="hidden" asp-for="PointCategoryId" />
            @Html.ValidationMessageFor(m => m.PointCategoryId, "", new { @class = "text-danger", id="selectPointCatError" })
        </div>
    </div>
    <div class="row" style="display:none" id="stdPointProp">
        <div class="col-sm-12">
            <label>Domain Link</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.DomainLink, new { htmlAttributes = new { @class = "form-control",@type="url",@id="pointDomin" } })
            @Html.ValidationMessageFor(m => m.DomainLink, "", new { @class = "text-danger", id="domainError" })
        </div>
    </div>
    <div class="row" style="display:none" id="emailPointProp">
        <div class="col-sm-12">
            <label>Recipient Email Address (Max 3)</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.Email1, new { htmlAttributes = new { @class = "form-control mb-1",@id="pointEmai1",@placeholder="Enter 1st Email",@type="email" } })
            @Html.ValidationMessageFor(m => m.Email1, "", new { @class = "text-danger", id="email1Error" })
            @Html.EditorFor(m => m.Email2, new { htmlAttributes = new { @class = "form-control mb-1",@id="pointEmai2",@placeholder="Enter 2nd Email",@autocomplete="off",@type="email" } })
            @Html.ValidationMessageFor(m => m.Email2, "", new { @class = "text-danger", id="email2Error" })
            @Html.EditorFor(m => m.Email3, new { htmlAttributes = new { @class = "form-control",@id="pointEmai3",@placeholder="Enter 3rd Email",@autocomplete="off",@type="email" } })
            @Html.ValidationMessageFor(m => m.Email3, "", new { @class = "text-danger", id="email3Error" })
        </div>
        <div class="col-sm-6">
            <label>Subject</label><span style="color:red"> *</span>
            @Html.EditorFor(m => m.Subject, new { htmlAttributes = new { @class = "form-control",@placeholder="Enter Subject",@id="SubjectId" } })
            @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "text-danger", id="subjectError" })
        </div>
        <div class="col-sm-12">
            <label>Text</label><span style="color:red"> *</span>
            @Html.TextAreaFor(m => m.Text, new { @class = "form-control",@placeholder="Enter Text",@id="TextId" })
            @Html.ValidationMessageFor(m => m.Text, "", new { @class = "text-danger", id="textError" })
        </div>
        
    </div>

</form>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

<script>
    $(document).ready(function($) {
        //let data = [
        //]
        //$("#pointEmails").email_multiple({
        //    data: data
        //    // reset: true
        //});

    });
    function ChangePointCat(obj) {
        var selectedpointCat = $("#pointCatList").val();
        if (selectedpointCat == 1) {
            $("#stdPointProp").show();
            $("#emailPointProp").hide();
            $("#pointDomin").prop('required', true);

            $("#SubjectId").val('');
            $("#SubjectId").prop('required', false);
            $("#TextId").val('');
            $("#TextId").prop('required', false);
            $("#pointEmai1").val('');
            $("#pointEmai2").val('');
            $("#pointEmai3").val('');
            $("#pointEmai1").prop('required', false);
        }
        else if (selectedpointCat == 2) {
            $("#stdPointProp").hide();
            $("#emailPointProp").show();
            $("#pointDomin").val('');
            $("#pointDomin").prop('required', false);

            $("#SubjectId").prop('required', true);
            $("#TextId").prop('required', true);
            $("#pointEmai1").prop('required', true);
        }
        else {
            $("#stdPointProp").hide();
            $("#emailPointProp").hide();
        }
    };
    $("#saveUrlBtn").click(function() {
        if ($("#addUrlForm").valid()) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveLink", "URL")',
                dataType: 'json',
                data: $("#addUrlForm").serializeArray(),
                beforeSend: function() {
                    $("#logoLoader").fadeIn();
                },
                success: function(data) {
                    $("#logoLoader").fadeOut();
                    if (data == 0) {
                        $('#urlError').text('URL already exist');
                    }
                    else if (data == -1) {
                        $('#customerPointError').text('Customer point already exist');
                    }
                    else if (data == 1) {
                        location.reload(true);
                    }
                }
            })
        }
    });
</script>