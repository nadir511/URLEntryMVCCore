@using URLEntryMVC.ApplicationConstants
@model IEnumerable<URLEntryMVC.ViewModel.UrlVM.UrlVM>

@{
    ViewData["Title"] = "ListOfLinks";
}
<style>
    .error {
        color: red !important;
    }
</style>
<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-lg-8 mb-4 order-0">
            <div class="card">
                <div class="d-flex align-items-end row">
                    <div class="col-lg-8">
                        <div class="card-body">
                            <h5 class="card-title text-primary">Smart Contact Points Powered By Tap-That</h5>
                            <p class="mb-4">
                                Our team is dedicated to delivering high value solutions and exceptional customer service.
                                If you have any questions about our products or services, please do not hesitate to reach out to us.
                                We are here to support you and ensure that your experience with our Smart Contact Points is seamless and successful.
                            </p>

                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="card-body">
                            <h5 class="card-title text-primary">Contact Us</h5>
                            <p>
                                Email:
                                <a href="mailto:office@tap-that.io">
                                    office@tap-that.io
                                </a>
                            </p>
                            <p class="mb-5">
                                Phone:
                                <a href="tel:UK:+07748645453">
                                    07748645453
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-4 order-1">
            <div class="row">
                @if (User.IsInRole(AppConstant.AdminRole))
                {
                    <div class="col-lg-6 col-md-12 col-6 mb-4">
                        <div class="card">
                            <div class="card-body">
                                <div class="card-title d-flex align-items-start justify-content-between">
                                    <div class="avatar flex-shrink-0">
                                        <img src="../TemplateFiles/assets/img/icons/unicons/chart-success.png"
                                             alt="chart success"
                                             class="rounded" />
                                    </div>
                                </div>
                                <span class="fw-semibold d-block mb-1">Total Customers</span>
                                <h3 class="card-title mb-2">@ViewBag.TotalCustomers</h3>
                            </div>
                        </div>
                    </div>
                }
                <div class="col-lg-6 col-md-12 col-6 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <div class="card-title d-flex align-items-start justify-content-between">
                                <div class="avatar flex-shrink-0">
                                    <img src="../TemplateFiles/assets/img/icons/unicons/chart-success.png"
                                         alt="chart success"
                                         class="rounded" />
                                </div>
                            </div>
                            <span class="fw-semibold d-block mb-1">Total Points</span>
                            <h3 class="card-title mb-2">@ViewBag.TotalPoints</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-xxl">
    <div class="card">
        <h5 class="card-header d-flex justify-content-between align-items-center">
            NFC POINTS
            <div class="d-flex">
                @if (User.IsInRole(AppConstant.AdminRole))
                {
                    <button type="button" class="btn btn-primary mb-2" id="btnAddNewUrl">
                        <i class="menu-icon tf-icons bx bx-plus-circle"></i>
                        Add New Point
                    </button>
                }
                <button type="button" class="btn btn-primary mb-2" id="multiEditBtn" style="display:none;margin-left:5px">
                    <i class="bx bxs-edit"></i>
                    Multi-Edit
                </button>
            </div>
        </h5>
        <div class="table-responsive text-nowrap p-2">
            <table class="table table-striped table-bordered" id="linksTbl">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.UrlLink)
                        </th>
                        @if (ViewBag.pointCategory != AppConstant.StdContractPoint && ViewBag.pointCategory != AppConstant.EmailContractPoint && ViewBag.pointCategory != AppConstant.TapContractPoint)
                        {
                            <th>Category</th>
                        }
                        <th>
                            Notes
                        </th>
                        @if (ViewBag.pointCategory == AppConstant.StdContractPoint || ViewBag.pointCategory == AppConstant.TapContractPoint)
                        {
                            <th>
                                @Html.DisplayNameFor(model => model.DomainLink)
                            </th>
                        }
                        @if (User.IsInRole(AppConstant.AdminRole))
                        {
                            <th>
                                Total Tap's
                            </th>
                        }
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(modelItem => item.Id)
                                @if (User.IsInRole(AppConstant.AdminRole))
                                {
                                    if (item.PointCategoryId == 1 || item.PointCategoryId == 3)
                                    {
                                        <a href="@item.DomainLink" class="link-primary" target="_blank">@Html.DisplayFor(modelItem => item.UrlLink)</a>
                                    }
                                    else if (item.PointCategoryId == 2)
                                    {
                                        <a href="mailto:@item.PointEmails?subject=@item.Subject&body=@item.Body">@Html.DisplayFor(modelItem => item.UrlLink)</a>
                                    }

                                }
                                else
                                {
                                    if (item.PointCategoryId == 1 || item.PointCategoryId == 3)
                                    {
                                        <a href="@item.DomainLink" class="link-primary" target="_blank">@Html.DisplayFor(modelItem => item.CustomerPointName)</a>
                                    }
                                    else if (item.PointCategoryId == 2)
                                    {
                                        <a href="mailto:@item.PointEmails?subject=@item.Subject&body=@item.Body">@Html.DisplayFor(modelItem => item.CustomerPointName)</a>
                                    }
                                }
                            </td>
                            @if (ViewBag.pointCategory != AppConstant.StdContractPoint && ViewBag.pointCategory != AppConstant.EmailContractPoint && ViewBag.pointCategory != AppConstant.TapContractPoint)
                            {
                                <td>
                                    <input class="form-control" value="@item.PointCategoryName" readonly />
                                </td>
                            }
                            <td>
                                <input class="form-control" value="@item.CustomerNotes" readonly />
                                @*@Html.EditorFor(m=>item.CustomerNotes, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })*@
                            </td>
                            @if (ViewBag.pointCategory == AppConstant.StdContractPoint || ViewBag.pointCategory == AppConstant.TapContractPoint)
                            {
                                <td>
                                    <input class="form-control" value="@item.DomainLink" readonly />
                                </td>
                            }
                            @if (User.IsInRole(AppConstant.AdminRole))
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalClicks)
                                </td>
                            }
                            <td>
                                @if (User.IsInRole(AppConstant.AdminRole))
                                {
                                    <button type="button" class="btn btn-primary" onclick="EditUrl(@item.Id)">
                                        <i class="bx bxs-edit"></i>
                                    </button>
                                    <button type="button" class="btn btn-primary" onclick="DeleteUrl(@item.Id)">
                                        <i class="bx bxs-trash"></i>
                                    </button>
                                }
                                @if (User.IsInRole(AppConstant.CustomerRole))
                                {
                                    <button type="button" class="btn btn-primary" onclick="EditDomainLink(@item.Id)">
                                        <i class="bx bxs-edit"></i>
                                    </button>
                                }
                                @if (ViewBag.pointCategory == AppConstant.StdContractPoint || ViewBag.pointCategory == AppConstant.EmailContractPoint)
                                {
                                    <button type="button" class="btn btn-primary">
                                        <input class="form-check-input multiEditCheck" type="checkbox" id="@item.Id">
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<!-- modal -->
<div class="modal fade" id="AppModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add New Point</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="ModalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveUrlBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="EditAppModal" tabindex="-1" aria-labelledby="EditexampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditexampleModalLabel">Edit Point</h5>
                @*<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>*@
            </div>
            <div class="modal-body" id="EditModalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="updateBtn">Update</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="DeleteAppModal" tabindex="-1" aria-labelledby="DeleteExampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="DeleteExampleModalLabel">Delete URL</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="DeleteModalBody">
                Are you sure you want to delete the URL?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="deleteBtn">Confirm Delete</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.1/js/dataTables.bootstrap4.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script>
    $(document).ready(function () {
        $('#linksTbl').DataTable();
        var selectedUrlId = 0;

        //Multiple URL Editing
        var selectedIds = []; // Array to store selected checkbox IDs
        // Checkboxes click event handler
        $("#linksTbl").on("change", "input[type=checkbox]", function () {
            var checkboxId = $(this).attr("id");
            if ($(this).is(":checked")) {
                // Checkbox is checked, show edit button and add to selectedIds array
                $("#multiEditBtn").show();
                selectedIds.push(checkboxId);
            }
            else {
                // Checkbox is unchecked, remove from selectedIds array
                var index = selectedIds.indexOf(checkboxId);
                if (index !== -1) {
                    selectedIds.splice(index, 1);
                }
                // If no checkboxes are selected, hide edit button
                if (selectedIds.length === 0) {
                    $("#multiEditBtn").hide();
                }
            }
        })

        $('#multiEditBtn').click(function () {
            console.log(selectedIds);
            var selectedPointCategory = '@ViewBag.pointCategory';
            $.ajax({
                url: "@Url.Action("UpdateMultiPointInfo", "URL")",
                type: 'GET',
                //contentType: "application/json; charset=utf-8",
                traditional: true,
                data: { pointIds: selectedIds, pointCategory: selectedPointCategory },
                beforeSend: function () {
                    $("#logoLoader").fadeIn();
                },
                success: function (obj) {
                    $("#logoLoader").fadeOut();
                    $('#EditModalBody').html(obj);
                    $('#EditAppModal').modal({
                        backdrop: 'static', // Prevent to close on click outside the modal
                        keyboard: false, // Prevent to close by ESC
                        show: true
                    });
                    $('#EditAppModal').modal('show');
                },
                error: (error) => {
                    console.log(JSON.stringify(error));
                }
            });
        });
    });

    $("#btnAddNewUrl").click(function () {
        $.ajax({
            url: "@Url.Action("SaveLink", "URL")",
            type: 'GET',
            contentType: 'application/json',
            beforeSend: function () {
                $("#logoLoader").fadeIn();
            },
            success: function (obj) {
                debugger;
                $("#logoLoader").fadeOut();
                $('#ModalBody').html(obj);
                $('#AppModal').modal({
                    backdrop: 'static', // Prevent to close on click outside the modal
                    keyboard: false, // Prevent to close by ESC
                    show: true
                });
                $('#AppModal').modal('show');
            },
            error: (error) => {
                console.log(JSON.stringify(error));
            }
        });
    });
    function EditUrl(id) {
        $.ajax({
            type: 'GET',
            url: "@Url.Action("UpdateLink", "URL")",
            data: { id: id },
            beforeSend: function () {
                $("#logoLoader").fadeIn();
            },
            success: function (obj) {
                $("#logoLoader").fadeOut();
                $('#EditModalBody').html(obj);
                $('#EditAppModal').modal({
                    backdrop: 'static', // Prevent to close on click outside the modal
                    keyboard: false, // Prevent to close by ESC
                    show: true
                });
                $('#EditAppModal').modal('show');
            },
            error: (error) => {
                console.log(JSON.stringify(error));
            }
        });
    }
    function DeleteUrl(id) {
        selectedUrlId = id;
        $('#DeleteAppModal').modal({
            backdrop: 'static', // Prevent to close on click outside the modal
            keyboard: false, // Prevent to close by ESC
            show: true
        });
        $('#DeleteAppModal').modal('show');
    }
    $("#deleteBtn").click(function () {
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeletLink", "URL")',
            data: { Id: selectedUrlId },
            beforeSend: function () {
                $("#logoLoader").fadeIn();
            },
            success: function (data) {
                $("#logoLoader").fadeOut();
                if (data == 1) {
                    location.reload(true);
                }
            }
        })
    });
    function EditDomainLink(id) {
        $.ajax({
            type: 'GET',
            url: "@Url.Action("UpdatePointInfo", "URL")",
            data: { id: id },
            beforeSend: function () {
                $("#logoLoader").fadeIn();
            },
            success: function (obj) {
                $("#logoLoader").fadeOut();
                $('#EditModalBody').html(obj);
                $('#EditAppModal').modal('show');
            },
            error: (error) => {
                console.log(JSON.stringify(error));
            }
        });
    }
</script>
